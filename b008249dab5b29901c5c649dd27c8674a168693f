{"timestamp":"1461435678","author":"ojarjur@google.com","location":{"commit":"c06f4dd5ef0b01ebd65bb41a7ff3af04c93b8b61","path":"api/api.go","range":{"startLine":160}},"description":"This API should paginate results","resolved":false}

{"timestamp":"1461435706","author":"ojarjur@google.com","location":{"commit":"c06f4dd5ef0b01ebd65bb41a7ff3af04c93b8b61","path":"api/api.go","range":{"startLine":151}},"description":"This API should paginate results","resolved":false}

{"timestamp":"1461436094","author":"ojarjur@google.com","location":{"commit":"c06f4dd5ef0b01ebd65bb41a7ff3af04c93b8b61","path":"api/api.go","range":{"startLine":178}},"description":"This should serve a JSON object with more details.\n\nSpecifically, I think we need to at least include the following:\n\n1. The commits used for the left and right hand sides.\n2. The raw contents of the unified diff.\n\nThe commits are necessary for the client to be able to figure\nout which comments (if any) to display inline with the diff.\n\nWe should probably also make the API support optional parameters\nfor specifying the left and right hand sides to use.\n\nFinally, we might also want to include something like the subset\nof the history DAG contained between the head and base of the\nreview, so that the client can present a UI for selecting the\nleft and right hand sides to diff against.\n","resolved":false}

{"timestamp":"1461436479","author":"ojarjur@google.com","location":{"commit":"c06f4dd5ef0b01ebd65bb41a7ff3af04c93b8b61","path":"api/api.go","range":{"startLine":169}},"description":"This needs to include the build status message and analyses message","resolved":false}
